using System;
using System.Xml;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using CSKernelClient;

namespace CSReportDll
{
    public class cReportField
    {

        private String m_name = "";
        private int m_index = 0;
        private int m_fieldType = 0;

        public String getName()
        {
            return m_name;
        }

        public void setName(String rhs)
        {
            m_name = rhs;
        }

        public int getIndex()
        {
            return m_index;
        }

        public void setIndex(int rhs)
        {
            m_index = rhs;
        }

        public int getFieldType()
        {
            return m_fieldType;
        }

        public void setFieldType(int rhs)
        {
            m_fieldType = rhs;
        }

        // friend functions
        internal bool load(CSXml.cXml xDoc, ref XmlElement nodObj)
        {
            nodObj = xDoc.getNodeFromNode(nodObj, "Field");
            m_index = xDoc.getNodeProperty(nodObj, "Index").getValueInt(eTypes.eInteger);
            m_name = xDoc.getNodeProperty(nodObj, "Name").getValueString(eTypes.eText);
            m_fieldType = xDoc.getNodeProperty(nodObj, "FieldType").getValueInt(eTypes.eInteger);
            return true;
        }

        internal bool save(CSXml.cXml xDoc, XmlElement nodeFather)
        {
            CSXml.cXmlProperty xProperty = null;
            XmlElement nodObj = null;

            xProperty = new CSXml.cXmlProperty();

            xProperty.setName("Field");
            nodObj = xDoc.addNodeToNode(nodeFather, xProperty);

            xProperty.setName("Index");
            xProperty.setValue(eTypes.eInteger, m_index);
            xDoc.addPropertyToNode(nodObj, xProperty);

            xProperty.setName("Name");
            xProperty.setValue(eTypes.eText, m_name);
            xDoc.addPropertyToNode(nodObj, xProperty);

            xProperty.setName("FieldType");
            xProperty.setValue(eTypes.eInteger, m_fieldType);
            xDoc.addPropertyToNode(nodObj, xProperty);

            return true;
        }

    }

}
